"use client";

import Breadcrumb from "@/components/pages/document/Breadcrumb";
import PaginationButtons from "@/components/pages/document/PaginationButtons";
import TableOfContents from "@/components/pages/document/TableOfContents";
import { useState } from "react";
import { Check, Copy} from 'lucide-react';
import PropTypes from "prop-types";

const IntegrationGuidelines = () => {
  const [copied, setCopied] = useState(false);
  // const [isSidebarOpen, setIsSidebarOpen] = useState(false);

  const copyToClipboard = (text) => {
    navigator.clipboard.writeText(text).then(() => {
      setCopied(true);
      setTimeout(() => {
        setCopied(false);
      }, 2000);
    });
  };

  const tableOfContents = [
    {
      title: "Integration Guidelines",
      links: [
        { label: "System Integration Steps", href: "#SystemIntegrationSteps" },
        { label: "Code Snippets", href: "#Code_Snippets" },
      ],
    },
  ];

  

  return (
    <div className="min-h-screen bg-[#121212] max-w-screen-sm text-white relative">
      {/* Mobile Menu Button */}
      

      <div className="flex flex-col md:flex-row">
        {/* Main Content */}
        <div className="flex-1 p-4 md:p-8 w-full md:max-w-3xl lg:max-w-4xl mx-auto">
          <Breadcrumb
            items={[
              { label: "Home", href: "/" },
              { label: "Integration Guidelines", href: "/integration-guidelines" },
            ]}
          />
          <h1 className="text-4xl md:text-6xl font-bold mb-6 text-[#C0C0C0]">
            Integration Guidelines
          </h1>

          {/* System Integration Steps Section */}
          <section className="pt-8 md:pt-16" id="SystemIntegrationSteps">
            <h2 className="text-3xl md:text-4xl font-semibold mb-4 text-[#C0C0C0]">
              System Integration Steps
            </h2>
            <div className="space-y-4">
              <p className="text-gray-300 text-base md:text-lg text-left">
                We have upcoming apps for popular platforms like{" "}
                <strong>WordPress</strong>, <strong>Shopify</strong>, and{" "}
                <strong>Wix</strong>! These apps will allow seamless integration of
                client scores generated by our platform directly into their websites.
              </p>
              <p className="text-gray-300 text-base md:text-lg text-left">
                With just a few clicks, clients will be able to display scores
                dynamically, ensuring real-time updates and enhanced user engagement.
              </p>
              <p className="text-gray-300 text-base md:text-lg text-left">
                Similarly, we will be providing <strong>API support</strong> for all
                popular programming languages to facilitate effortless integration
                with custom platforms.
              </p>
            </div>
          </section>

          {/* Code Snippets Section */}
          <section className="pt-8 md:pt-16" id="Code_Snippets">
            <h2 className="text-3xl md:text-4xl font-semibold mb-4 text-[#C0C0C0]">
              Code Snippets
            </h2>
            <div className="space-y-6">
              {/* Code blocks with improved responsiveness */}
              <div className="relative">
                <pre className="bg-[#1E1E1E] p-4 rounded text-sm text-[#C0C0C0] overflow-x-auto">
                  {`{
  "idea_stage": 5,
  "work_status": 3,
  "project_type": 3,
  "job_relation": 5,
  "investment_plan": 4,
  "work_experience": 4,
  "project_location": 1,
  "idea_description": "AI-powered fitness application that provides personalized workout routines based on user's fitness level and goals",
  "daily_hours": 4,
  "timeframe": 2
}`}
                </pre>
                <CopyButton 
                  onClick={() => copyToClipboard(`{
  "idea_stage": 5,
  "work_status": 3,
  "project_type": 3,
  "job_relation": 5,
  "investment_plan": 4,
  "work_experience": 4,
  "project_location": 1,
  "idea_description": "AI-powered fitness application that provides personalized workout routines based on user's fitness level and goals",
  "daily_hours": 4,
  "timeframe": 2
}`)} 
                  copied={copied}
                />
              </div>

              <div>
                <h3 className="text-2xl md:text-3xl font-semibold mb-4 text-[#C0C0C0] text-left">
                  Response Format
                </h3>
                <h4 className="text-xl md:text-2xl font-semibold mb-2 text-[#C0C0C0]">
                  Success Response (200 OK)
                </h4>
                <div className="relative">
                  <pre className="bg-[#1E1E1E] p-4 rounded text-sm text-[#C0C0C0] overflow-x-auto">
                    {`{
  "status": 200,
  "error": false,
  "message": "Success",
  "data": {
    "resultText": "Detailed analysis and recommendations...",
    "success_percentage": "75.23"
  }
}`}
                  </pre>
                  <CopyButton 
                    onClick={() => copyToClipboard(`{
  "status": 200,
  "error": false,
  "message": "Success",
  "data": {
    "resultText": "Detailed analysis and recommendations...",
    "success_percentage": "75.23"
  }
}`)} 
                    copied={copied}
                  />
                </div>
              </div>

              {/* Error Responses */}
              <div className="space-y-4">
                <h4 className="text-xl md:text-2xl font-semibold mb-2 text-[#C0C0C0]">
                  Validation Error Response (400)
                </h4>
                <div className="relative">
                  <pre className="bg-[#1E1E1E] p-4 rounded text-sm text-[#C0C0C0] overflow-x-auto">
                    {`{
  "status": 400,
  "error": true,
  "message": "Validation error message",
  "data": null
}`}
                  </pre>
                  <CopyButton 
                    onClick={() => copyToClipboard(`{
  "status": 400,
  "error": true,
  "message": "Validation error message",
  "data": null
}`)} 
                    copied={copied}
                  />
                </div>
              </div>
            </div>
          </section>

          <div className="mt-8">
            <PaginationButtons
              previous={{ name: "Security Protocols", href: "/security-protocols" }}
              next={{ name: "Development Roadmap", href: "/development-roadmap" }}
            />
          </div>
        </div>
<TableOfContents data={tableOfContents} />
        {/* Table of Contents Sidebar */}
        
      </div>
    </div>
  );
};
// Copy Button Component


const CopyButton = ({ onClick, copied }) => (
  <button
    onClick={onClick}
    className={`
      absolute top-2 right-2 
      inline-flex items-center gap-2
      bg-zinc-800 hover:bg-zinc-700
      text-white px-3 py-1.5 rounded text-xs
      transition-all duration-200 ease
      ${copied ? 'scale-95' : 'scale-100'}
      active:scale-90
    `}
  >
    {copied ? (
      <>
        <Check className="w-3 h-3" />
        <span>Copied!</span>
      </>
    ) : (
      <>
        <Copy className="w-3 h-3" />
        <span>Copy Code</span>
      </>
    )}
  </button>
);
CopyButton.propTypes = {
  onClick: PropTypes.func.isRequired,
  copied: PropTypes.bool.isRequired
};
// Add default props
CopyButton.defaultProps = {
  copied: false
};
export default IntegrationGuidelines;